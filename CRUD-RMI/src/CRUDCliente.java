/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.HeadlessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author megus
 */
public class CRUDCliente extends javax.swing.JFrame {

    /**
     * Creates new form CRUDCliente
     */
    
    DefaultTableModel miTabla;
    
    public CRUDCliente() throws RemoteException, NotBoundException {
        miTabla = new DefaultTableModel(null, getColumnas());
        setFilas();
        initComponents();
    }
    
    private String[] getColumnas(){
        String columna[] = new String[]{"Nombre","Edad","Sexo"};
        return columna;
    }
    
    private void setFilas() throws RemoteException, NotBoundException{
        if(miTabla.getRowCount() > 0){
            for (int i = 0; i < miTabla.getRowCount(); i++) {
                miTabla.removeRow(i);
            }
        }
        Registry reg = LocateRegistry.getRegistry("localhost", 8080);
        CRUDInterface crud = (CRUDInterface)reg.lookup("crud");
        
        List<Persona> lista = crud.conseguirTodos();
        Object datos[] = new Object[3];
        
        for (Persona p:lista) {
            datos[0] = p.getNombre();
            datos[1] = p.getEdad();
            datos[2] = p.getSexo();
            
            miTabla.addRow(datos);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Anadir = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        actualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(miTabla);
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 36)); // NOI18N
        jLabel1.setText("CRUD - RMI - MySQL");

        Anadir.setText("AÃ±adir");
        Anadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnadirActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        actualizar.setText("Actualizar");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
            .addGroup(layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(Anadir)
                .addGap(18, 18, 18)
                .addComponent(actualizar)
                .addGap(18, 18, 18)
                .addComponent(eliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Anadir)
                    .addComponent(eliminar)
                    .addComponent(actualizar))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnadirActionPerformed
        try {
            Persona p = new Persona();
            Registry reg = LocateRegistry.getRegistry("localhost", 8080);
            CRUDInterface crud = (CRUDInterface)reg.lookup("crud");
        
            p.setNombre(JOptionPane.showInputDialog(this, "Ingresa el nombre: ", "Agregando usuario...", JOptionPane.QUESTION_MESSAGE));
            p.setEdad(Integer.parseInt((JOptionPane.showInputDialog(this, "Ingresa la edad: ", "Agregando usuario...", JOptionPane.QUESTION_MESSAGE))));
            p.setSexo(JOptionPane.showInputDialog(this, "Ingresa el sexo", "Agregando usuario...", JOptionPane.QUESTION_MESSAGE).charAt(0));
        
            int status = crud.guardar(p);
            
            if(status > 0) JOptionPane.showMessageDialog(this, "Se ha agregado correctamente el usuario", "Usuario agregado...", JOptionPane.INFORMATION_MESSAGE);
            else JOptionPane.showMessageDialog(this, "No se ha agregado el usuario correctamente.", "ERROR", JOptionPane.ERROR_MESSAGE);
        
            setFilas();
        } catch (RemoteException | NotBoundException ex) {
            System.out.println("Error del cliente: "+ex);
        }
    }//GEN-LAST:event_AnadirActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        try {
            String nombre;
            Registry reg = LocateRegistry.getRegistry("localhost", 8080);
            CRUDInterface crud = (CRUDInterface)reg.lookup("crud");
            
            nombre = JOptionPane.showInputDialog(this, "Ingresa el nombre\ndel usuario a eliminar: ", "Eliminando usuario...", JOptionPane.QUESTION_MESSAGE);
            
            int status = crud.eliminar(nombre);
            
            if(status > 0) JOptionPane.showMessageDialog(this, "Se ha eliminado correctamente el usuario", "Usuario agregado...", JOptionPane.INFORMATION_MESSAGE);
            else JOptionPane.showMessageDialog(this, "No se ha eliminado el usuario correctamente.", "ERROR", JOptionPane.ERROR_MESSAGE);
        
            setFilas();
        } catch (HeadlessException | NotBoundException | RemoteException e) {
            System.out.println("Hubo un error en el cliente: "+e);
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        try {
            String nombreConseguir;
            Registry reg = LocateRegistry.getRegistry("localhost", 8080);
            CRUDInterface crud = (CRUDInterface)reg.lookup("crud");
            
            nombreConseguir = JOptionPane.showInputDialog(this, "Ingresa el nombre\ndel usuario a actualizar: ", "Actualizando usuario...", JOptionPane.QUESTION_MESSAGE);
            
            Persona p = crud.conseguirUno(nombreConseguir);
            
            if (p.getNombre() != null) {
                
                p.setNombre((String) JOptionPane.showInputDialog(this, "Ingresa el nombre: ", "Actualizando usuario...", JOptionPane.QUESTION_MESSAGE, null, null, p.getNombre()));
                p.setEdad(Integer.parseInt((String)JOptionPane.showInputDialog(this, "Ingresa la edad: ", "Actualizando usuario...", JOptionPane.QUESTION_MESSAGE, null, null, p.getEdad())));
                p.setSexo(((String) JOptionPane.showInputDialog(this, "Ingresa el sexo", "Actualizando usuario...", JOptionPane.QUESTION_MESSAGE, null, null, p.getSexo())).charAt(0));

                int status = crud.actualizar(p);
                
                if(status > 0) JOptionPane.showMessageDialog(this, "Se ha actualizado correctamente el usuario", "Usuario agregado...", JOptionPane.INFORMATION_MESSAGE);
                else JOptionPane.showMessageDialog(this, "No se ha actualizado el usuario correctamente.", "ERROR", JOptionPane.ERROR_MESSAGE);
        
            } else {
                JOptionPane.showMessageDialog(this, "El usuario que buscas actualizar no existe.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        
            setFilas();
        } catch (HeadlessException | NotBoundException | RemoteException e) {
            System.out.println("Error del cliente: "+e);
        }
    }//GEN-LAST:event_actualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUDCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUDCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUDCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUDCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CRUDCliente().setVisible(true);
                } catch (RemoteException ex) {
                    Logger.getLogger(CRUDCliente.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NotBoundException ex) {
                    Logger.getLogger(CRUDCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Anadir;
    private javax.swing.JButton actualizar;
    private javax.swing.JButton eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
